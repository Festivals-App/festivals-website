name: Release website and website node

on: 
  release:
    types: [ created ]

jobs:

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
        exclude:  
          - goarch: arm64
            goos: linux 
    steps:
    - uses: actions/checkout@v4.2.2

    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}
    - name: Set BUILD_TIME env
      run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}

    - uses: wangyoucao577/go-release-action@v1.53
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        asset_name: festivals-website-node-${{ matrix.goos }}-${{ matrix.goarch }}
        binary_name: "festivals-website-node"
        build_flags: -v
        ldflags: -X 'github.com/Festivals-App/festivals-website/server/status.ServerVersion=${{ env.APP_VERSION }}' -X 'github.com/Festivals-App/festivals-website/server/status.BuildTime=${{ env.BUILD_TIME }}' -X 'github.com/Festivals-App/festivals-website/server/status.GitRef=${{ github.ref }}'
        extra_files: LICENSE README.md config_template.toml operation/service_template.service operation/update_node.sh operation/update_website.sh operation/ufw_app_profile operation/nginx-certbot-config operation/nginx-config

  archive-build-artifacts:
    name: Release website
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
    
      - name: Step 1 - Prepare compile environment
        run: sudo apt install minify -y
    
      - name: Step 2 - Compile website
        run: |
          chmod +x compile.sh
          ./compile.sh
        
      - name: Step 3 - Create version file
        run: |
          cd out/current 
          echo "$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev )" >> version
      
      - name: Step 4 - Create compile_date file
        run: |
          cd out/current
          echo "$(date)" >> compile_date
        
      - name: Step 5 - Tar and compress
        run: |
          cd out/current
          tar -zcvf festivals-website.tar.gz * .well-known
          
      - name: Step 6 - Upload to Release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out/current/festivals-website.tar.gz
          tag: ${{ github.ref }}

      - name: Step 7 - Trigger website update
        run: |
          curl -X POST --header "Api-Key: ${{ secrets.FESTIVALS_WEBSITE_UPDATE_KEY }}" https://festivals-website-neele.festivalsapp.org/update/website
